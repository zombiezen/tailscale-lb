name: Release
on:
  push:
    tags:
      - 'v[0-9]*'

env:
  IMAGE_NAME: ghcr.io/zombiezen/tailscale-lb

jobs:
  docker:
    name: Docker Push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["amd64", "arm64"]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Authenticate to Google Cloud Platform
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ vars.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GOOGLE_SERVICE_ACCOUNT }}
          token_format: access_token
      - name: Log into GitHub Container Registry
        run: echo "$GITHUB_TOKEN" | docker login ghcr.io -u zombiezen --password-stdin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Nix
        uses: cachix/install-nix-action@v26
      - name: Set up cache
        uses: zombiezen/setup-nix-cache-action@v0.3.1
        with:
          substituters: ${{ vars.NIX_SUBSTITUTER }}
          secret_keys: ${{ secrets.NIX_PRIVATE_KEY }}
          use_nixcached: true
      - id: build
        name: Build
        run: |
          IMAGE_TAG="$(echo ${{ github.ref_name }} | sed -e 's/^v//')-${{ matrix.arch }}"
          echo "tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          nix build \
            --print-build-logs \
            --file docker.nix \
            --argstr name "$IMAGE_NAME" \
            --argstr tag "$IMAGE_TAG" \
            --argstr rev ${{ github.sha }} \
            --argstr system x86_64-linux
      - name: Load into Docker
        run: docker load < result
      - name: Push to GitHub Container Registry
        run: docker push "${IMAGE_NAME}:${IMAGE_TAG}"
        env:
          IMAGE_TAG: ${{ steps.build.outputs.tag }}
  docker-manifest:
    name: Create Multi-Arch Image
    needs: [docker]
    runs-on: ubuntu-latest
    steps:
      - name: Log into GitHub Container Registry
        run: echo "$GITHUB_TOKEN" | docker login ghcr.io -u zombiezen --password-stdin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: manifest
        name: Create manifest
        run: |
          IMAGE_TAG="$(echo ${{ github.ref_name }} | sed -e 's/^v//')"
          echo "tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          docker manifest create \
            "${IMAGE_NAME}:${IMAGE_TAG}" \
            "${IMAGE_NAME}:${IMAGE_TAG}-amd64" \
            "${IMAGE_NAME}:${IMAGE_TAG}-arm64"
      - name: Push to GitHub Container Registry
        run: docker manifest push "${IMAGE_NAME}:${IMAGE_TAG}"
        env:
          IMAGE_TAG: ${{ steps.manifest.outputs.tag }}

permissions:
  contents: read
  packages: write
  id-token: write
